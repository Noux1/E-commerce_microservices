version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka-ecommerce'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  postgres-client:
    image: postgres:16.2
    container_name: postgres-client
    ports:
      - '5436:5432'
    environment:
      - POSTGRES_USER=nour
      - POSTGRES_PASSWORD=nour
      - POSTGRES_DB=postgres-client
    volumes:
      - postgres-data-client:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  postgres-order:
    image: postgres:16.2
    container_name: postgres-order
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=nour
      - POSTGRES_PASSWORD=nour
      - POSTGRES_DB=postgres-order
    volumes:
      - postgres-data-order:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  postgres-product:
    image: postgres:16.2
    container_name: postgres-product
    ports:
      - '5434:5432'
    environment:
      - POSTGRES_USER=nour
      - POSTGRES_PASSWORD=nour
      - POSTGRES_DB=postgres-product
    volumes:
      - postgres-data-product:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  postgres-payment:
    image: postgres:16.2
    container_name: postgres-payment
    ports:
      - '5435:5432'
    environment:
      - POSTGRES_USER=nour
      - POSTGRES_PASSWORD=nour
      - POSTGRES_DB=postgres-payment
    volumes:
      - postgres-data-payment:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network 

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=nour
      - MONGO_INITDB_ROOT_PASSWORD=nour

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=nour
      - ME_CONFIG_MONGODB_ADMINPASSWORD=nour
      - ME_CONFIG_MONGODB_SERVER=mongodb


volumes:
  postgres-data-client:
  postgres-data-order:
  postgres-data-product:
  postgres-data-payment:
  mongo:

networks:
  app-network:
    driver: bridge
